version: '3.8'

services:
  mysql-db:
    image: mysql:8.0.42
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: products_db  # Esta línea crea la base de datos automáticamente
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: [
        "CMD",
        "mysqladmin", "ping", "-h", "localhost",
        "-uroot", "-ppassword",
        "--silent"
      ]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mysql-db
    environment:
      PMA_HOST: mysql-db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    networks:
      - app-network
    restart: unless-stopped
    # Opcional: Si quieres persistir configuraciones
    volumes:
      - ./phpmyadmin/sessions:/sessions
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      mysql-db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/products_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    volumes:
      - ./backend/target:/app/target
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    stdin_open: true
    tty: true

volumes:
  mysql-data:
    driver: local

networks:
  app-network:
    driver: bridge